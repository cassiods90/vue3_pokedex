// /* color palette from <https://github.com/vuejs/theme> */
// :root {
//     --vt-c-white: #ffffff;
//     --vt-c-white-soft: #f8f8f8;
//     --vt-c-white-mute: #f2f2f2;

//     --vt-c-black: #181818;
//     --vt-c-black-soft: #222222;
//     --vt-c-black-mute: #282828;

//     --vt-c-indigo: #2c3e50;

//     --vt-c-divider-light-1: rgba(60, 60, 60, 0.29);
//     --vt-c-divider-light-2: rgba(60, 60, 60, 0.12);
//     --vt-c-divider-dark-1: rgba(84, 84, 84, 0.65);
//     --vt-c-divider-dark-2: rgba(84, 84, 84, 0.48);

//     --vt-c-text-light-1: var(--vt-c-indigo);
//     --vt-c-text-light-2: rgba(60, 60, 60, 0.66);
//     --vt-c-text-dark-1: var(--vt-c-white);
//     --vt-c-text-dark-2: rgba(235, 235, 235, 0.64);
// }

// /* semantic color variables for this project */
// :root {
//     --color-background: var(--vt-c-white);
//     --color-background-soft: var(--vt-c-white-soft);
//     --color-background-mute: var(--vt-c-white-mute);

//     --color-border: var(--vt-c-divider-light-2);
//     --color-border-hover: var(--vt-c-divider-light-1);

//     --color-heading: var(--vt-c-text-light-1);
//     --color-text: var(--vt-c-text-light-1);

//     --section-gap: 160px;
// }

// @media (prefers-color-scheme: dark) {
//     :root {
//         --color-background: var(--vt-c-black);
//         --color-background-soft: var(--vt-c-black-soft);
//         --color-background-mute: var(--vt-c-black-mute);

//         --color-border: var(--vt-c-divider-dark-2);
//         --color-border-hover: var(--vt-c-divider-dark-1);

//         --color-heading: var(--vt-c-text-dark-1);
//         --color-text: var(--vt-c-text-dark-2);
//     }
// }

// *,
// *::before,
// *::after {
//     box-sizing: border-box;
//     margin: 0;
//     position: relative;
//     font-weight: normal;
// }

// a,
// .green {
//     text-decoration: none;
//     color: #00bd7e;
//     transition: 0.4s;
// }

// @media (hover: hover) {
//     a:hover {
//         background-color: hsla(160, 100%, 37%, 0.2);
//     }
// }

.slider-cont {
    width: 300px;
}

.custom-slider {
    --trackHeight: 0.5rem;
    --thumbRadius: 1rem;
}

/* style the input element with type "range" */
.custom-slider input[type='range'] {
    position: relative;
    appearance: none;
    background: none;
    /* pointer-events: none; */
    border-radius: 999px;
    z-index: 0;
}

/* ::before element to replace the slider track */
.custom-slider input[type='range']::before,
.custom-slider.minmax::before {
    content: '';
    position: absolute;
    width: var(--ProgressPercent, 100%);
    height: 100%;
    background: rgba($secColor, 0.7);
    /* z-index: -1; */
    pointer-events: none;
    border-radius: 999px;
}

/* `::-webkit-slider-runnable-track` targets the track (background) of a range slider in chrpme and safari browsers. */
.custom-slider input[type='range']::-webkit-slider-runnable-track {
    appearance: none;
    background: rgba($secColor, 0.3);
    height: var(--trackHeight);
    border-radius: 999px;
}

/* `::-moz-range-track` targets the track (background) of a range slider in Mozilla Firefox. */
.custom-slider input[type='range']::-moz-range-track {
    appearance: none;
    background: rgba($secColor, 0.3);
    height: var(--trackHeight);
    border-radius: 999px;
}

.custom-slider input[type='range']::-webkit-slider-thumb {
    position: relative;
    /* top: 50%; 
  transform: translate(0, -50%);
  */
    width: var(--thumbRadius);
    height: var(--thumbRadius);
    margin-top: calc((var(--trackHeight) - var(--thumbRadius)) / 2);
    background: rgba($secColor, 1);
    border-radius: 999px;
    pointer-events: all;
    appearance: none;
    z-index: 1;
}

.custom-slider.minmax {
    position: relative;
    height: var(--trackHeight);
    background: rgba($secColor, 0.3);
    border-radius: 999px;
    margin: 0.5rem 0;
    --progressLeft: 0%;
    --progressRight: 0%;
}

.custom-slider.minmax input[type='range'] {
    position: absolute;
    pointer-events: none;
    width: 100%;
}
.custom-slider.minmax input[type='range']::-webkit-slider-runnable-track {
    background: none;
}

.custom-slider.minmax::before {
    left: var(--progressLeft);
    right: var(--progressRight);
    width: unset;
}

.custom-slider.minmax input[type='range']::before {
    display: none;
}

.minmax-inputs {
    display: flex;
    justify-content: space-between;
}

.minmax-inputs {
    input {
        width: 60px;
        padding: 5px 0 5px 10px;
        // height: 50px;
        outline: 0;
        border: 0;
        border-radius: 10px;
        background-color: rgba($white, 0.1);
        color: $white;
        @include transition();
        &::placeholder {
            color: $white;
        }
        &:focus-visible {
            box-shadow: rgba($secColor, 0.2) 0px 3px 3px 0px;
        }
    }
}
